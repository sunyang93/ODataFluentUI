// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace OdataFluentUI.Data.Models
{
    /// <summary>
    /// Customers (resellers) of Adventure Works products.
    /// </summary>
    [Table("Store", Schema = "Sales")]
    [Index(nameof(rowguid), Name = "AK_Store_rowguid", IsUnique = true)]
    [Index(nameof(SalesPersonID), Name = "IX_Store_SalesPersonID")]
    [Index(nameof(Demographics), Name = "PXML_Store_Demographics")]
    public partial class Store
    {
        public Store()
        {
            Customers = new HashSet<Customer>();
        }

        /// <summary>
        /// Primary key. Foreign key to Customer.BusinessEntityID.
        /// </summary>
        [Key]
        public int BusinessEntityID { get; set; }
        /// <summary>
        /// Name of the store.
        /// </summary>
        [Required]
        [StringLength(50)]
        public string Name { get; set; }
        /// <summary>
        /// ID of the sales person assigned to the customer. Foreign key to SalesPerson.BusinessEntityID.
        /// </summary>
        public int? SalesPersonID { get; set; }
        /// <summary>
        /// Demographic informationg about the store such as the number of employees, annual sales and store type.
        /// </summary>
        [Column(TypeName = "xml")]
        public string Demographics { get; set; }
        /// <summary>
        /// ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
        /// </summary>
        public Guid rowguid { get; set; }
        /// <summary>
        /// Date and time the record was last updated.
        /// </summary>
        [Column(TypeName = "datetime")]
        public DateTime ModifiedDate { get; set; }

        [ForeignKey(nameof(BusinessEntityID))]
        [InverseProperty("Store")]
        public virtual BusinessEntity BusinessEntity { get; set; }
        [ForeignKey(nameof(SalesPersonID))]
        [InverseProperty("Stores")]
        public virtual SalesPerson SalesPerson { get; set; }
        [InverseProperty(nameof(Customer.Store))]
        public virtual ICollection<Customer> Customers { get; set; }
    }
}