// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace OdataFluentUI.Data.Models
{
    /// <summary>
    /// Current customer information. Also see the Person and Store tables.
    /// </summary>
    [Table("Customer", Schema = "Sales")]
    [Index(nameof(AccountNumber), Name = "AK_Customer_AccountNumber", IsUnique = true)]
    [Index(nameof(rowguid), Name = "AK_Customer_rowguid", IsUnique = true)]
    [Index(nameof(TerritoryID), Name = "IX_Customer_TerritoryID")]
    public partial class Customer
    {
        public Customer()
        {
            SalesOrderHeaders = new HashSet<SalesOrderHeader>();
        }

        /// <summary>
        /// Primary key.
        /// </summary>
        [Key]
        public int CustomerID { get; set; }
        /// <summary>
        /// Foreign key to Person.BusinessEntityID
        /// </summary>
        public int? PersonID { get; set; }
        /// <summary>
        /// Foreign key to Store.BusinessEntityID
        /// </summary>
        public int? StoreID { get; set; }
        /// <summary>
        /// ID of the territory in which the customer is located. Foreign key to SalesTerritory.SalesTerritoryID.
        /// </summary>
        public int? TerritoryID { get; set; }
        /// <summary>
        /// Unique number identifying the customer assigned by the accounting system.
        /// </summary>
        [Required]
        [StringLength(10)]
        [Unicode(false)]
        public string AccountNumber { get; set; }
        /// <summary>
        /// ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
        /// </summary>
        public Guid rowguid { get; set; }
        /// <summary>
        /// Date and time the record was last updated.
        /// </summary>
        [Column(TypeName = "datetime")]
        public DateTime ModifiedDate { get; set; }

        [ForeignKey(nameof(PersonID))]
        [InverseProperty("Customers")]
        public virtual Person Person { get; set; }
        [ForeignKey(nameof(StoreID))]
        [InverseProperty("Customers")]
        public virtual Store Store { get; set; }
        [ForeignKey(nameof(TerritoryID))]
        [InverseProperty(nameof(SalesTerritory.Customers))]
        public virtual SalesTerritory Territory { get; set; }
        [InverseProperty(nameof(SalesOrderHeader.Customer))]
        public virtual ICollection<SalesOrderHeader> SalesOrderHeaders { get; set; }
    }
}